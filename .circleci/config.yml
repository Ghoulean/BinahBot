version: 2.1
orbs:
  aws-cli: circleci/aws-cli@5.1.0
jobs:
  prebuild:
    docker:
      - image: cimg/rust:1.81.0-node
    working_directory: ~/BinahBot
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "SHA256:jL0sv9h2M5JzXUxPtOvH/VeYCxY6wZPVXt8v9I+QYD4"
      - run:
          command: ssh-keyscan github.com >> ~/.ssh/known_hosts
      - run:
          name: Clone BinahBotConfig repository
          command: >-
            GIT_SSH_COMMAND='ssh -i ~/.ssh/id_rsa_fingerprint'
            git clone git@github.com:Ghoulean/BinahBotConfig.git ~/BinahBotConfig
      - run:
          name: Copy CDK env to the respective location
          command: cp ~/BinahBotConfig/cdk.env ~/BinahBot/ruina-cdk
      - run:
          name: Copy channel configuration to the respective location
          command: cp ~/BinahBotConfig/channel_config.toml ~/BinahBot/rust/binah_bot/binah_bot_spoiler/src/channel_config.toml
      - run:
          name: Generate env for onetime setup
          command: (echo APPLICATION_ID=$APPLICATION_ID; echo BOT_AUTH_TOKEN=$BOT_AUTH_TOKEN) > ~/BinahBot/ruina-discord-bot-onetime-setup/.env
      - persist_to_workspace:
          root: ~/BinahBot
          paths:
            - ruina-cdk
            - ruina-discord-bot-onetime-setup
            - rust
  test:
    docker:
      - image: cimg/rust:1.81.0-node
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Run all tests
          command: cd /tmp/workspace/rust && cargo test --all-targets
  build:
    docker:
      - image: cimg/rust:1.81.0-node
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Install python3 and pip3
          command: sudo apt-get update && sudo apt-get -y install python3 python3-pip
      - run:
          name: Install cargo lambda
          command: sudo pip3 install cargo-lambda
      - run:
          name: cargo build BinahBot
          command: cd /tmp/workspace/rust/binah_bot && cargo bb
      - run:
          name: cargo build Thumbnail Lambda
          command: cd /tmp/workspace/rust/thumbnail && cargo bb
      - run:
          name: cdk build
          command: cd /tmp/workspace/ruina-cdk && npm i && npm run build
      - run:
          name: Onetime setup build
          command: cd /tmp/workspace/ruina-discord-bot-onetime-setup && npm i && npm run build
      - persist_to_workspace:
          root: /tmp/workspace
          paths:
            - ruina-cdk
            - ruina-discord-bot-onetime-setup
            - rust/target/lambda/binah_bot/bootstrap.zip
            - rust/target/lambda/thumbnail/bootstrap.zip
  onetime-setup:
    docker:
      - image: cimg/rust:1.81.0-node
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - run:
          name: Ensure commands for BinahBot are up to date
          command: cd /tmp/workspace/ruina-discord-bot-onetime-setup && npm run discord:write    
  deploy-to-aws:
    environment:
      AWS_REGION: us-east-1
    docker:
      - image: cimg/rust:1.81.0-node
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - aws-cli/setup:
          profile_name: CircleCIWebIdentityProfile
          role_arn: $AWS_CICD_ROLE_ARN
      - run:
          name: deploy
          command: cd /tmp/workspace/ruina-cdk && npm run cdk deploy -- --profile=CircleCIWebIdentityProfile
workflows:
  deploy-to-prod:
    jobs:
      - prebuild
      - test:
          requires:
            - prebuild
      - build:
          filters:
            branches:
              only:
                - main
                - circleci-project-setup
          requires:
            - prebuild
      - onetime-setup:
          filters:
            branches:
              only:
                - main
          requires:
            - build
            - test
      - deploy-to-aws:
          filters:
            branches:
              only:
                - main
          requires:
            - build
            - test

